plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'

	//JSON Parse 라이브러리
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.google.code.gson:gson'

	//Redis 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//POSTGRE 라이브러리
	implementation 'org.hibernate.orm:hibernate-spatial'
	implementation 'org.locationtech.jts:jts-core'
	runtimeOnly    'org.postgresql:postgresql'

}

tasks.named('test') {
	useJUnitPlatform()
}
